package chuss;

//This class handles the player interaction with the game,
//specifically the selection of a move from user input.

import chuss.Piece.Color;
import chuss.Piece.PieceType;

public class Player implements Interactable {

    //FIELDS

    private final boolean DEBUG = false;
    //Constant to determine whether [DEBUG TEXT] will be displayed for this class
    private final UserInterface ui;
    //The UI that the player is using to interact with the board

    //CONSTRUCTORS

    public Player(UserInterface ui) {
        //The constructor for the Player object. Gets a one-time user
        //input and turns it into a move object to be passed back to
        //the main game.

        this.ui = ui;

    }

    //OTHER

    public Move getMove() {
        //Returns a move generated by the UI (either a CUI prompt or a GUI event listener)

        return ui.promptMove();

    }



    public Piece getPromotion(Move move) {

        PieceType type = ui.promptPromotion();
        Piece piece = null;

        Color turn = move.getMovedPiece().getColor();
        int x = move.getEndX();
        int y = move.getEndY();

        if(type == PieceType.PAWN) piece = new Pawn(turn, x, y);
        else if(type == PieceType.ROOK) piece = new Rook(turn, x, y);
        else if(type == PieceType.KNIGHT) piece = new Knight(turn, x, y);
        else if(type == PieceType.BISHOP) piece = new Bishop(turn, x, y);
        else if(type == PieceType.QUEEN) piece = new Queen(turn, x, y);
        else if(type == PieceType.KING) piece = new King(turn, x, y);
        else if(type == PieceType.EARL) piece = new Earl(turn, x, y);
        else if(type == PieceType.MONK) piece = new Monk(turn, x, y);

        return piece;

    }

}